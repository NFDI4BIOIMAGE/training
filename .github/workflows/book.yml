name: deploy-book

# Only run this when the master branch changes
on:
  push:
    branches:
    - master
    - main

permissions:
  contents: write
  pull-requests: write

# This job installs dependencies, build the book, and pushes it to `gh-pages`
jobs:
  deploy-book:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # Install dependencies
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        sudo apt-get install -y poppler-utils

    # Run data normalizer
    - name: Run data normalizer
      run: |
        python scripts/data_normalizer.py

    # Check for changes and create a new branch if changes exist
    - name: Commit changes
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        BRANCH_NAME=data-normalization-${{ github.run_id }}
        git checkout -b $BRANCH_NAME
        git add -A
        if [[ `git status --porcelain` ]]; then
          git commit -m "Normalize data for branch $BRANCH_NAME"
          git push origin $BRANCH_NAME
        else
          echo "No changes to commit"
          exit 0
        fi
  
    # Verify the branch exists on remote
    - name: Verify branch existence
      run: |
        git fetch --all
        if git ls-remote --exit-code origin data-normalization-${{ github.run_id }}; then
          echo "Branch exists on remote."
        else
          echo "Branch does not exist on remote. Exiting."
          exit 1
        fi

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: data-normalization-${{ github.run_id }}
        base: ${{ github.ref }}
        title: "Data Normalization"
        body: "This pull request normalizes the data."
        draft: false

    # Build the book
    - name: Generate link lists
      run: |
        python scripts/generate_link_lists.py
    - name: Export CSV
      run: |
        python scripts/export_csv.py
    - name: Top 3 downloads
      run: |
        python scripts/highlights-download-statistics.py
    - name: Build the book
      run: |
        jupyter-book build ./docs/

    # Push the book's HTML to github-pages
    - name: GitHub Pages action
      uses: peaceiris/actions-gh-pages@v3.5.9
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html