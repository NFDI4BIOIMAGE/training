name: test-deploy-book

# Only run this when a pull-request is sent to main
on:
  pull_request:
    branches:
    - main

# This job installs dependencies, builds the book
jobs:
  deploy-book:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2


    # Install dependencies
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'



    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        sudo apt-get install -y poppler-utils

    # Run data normalizer
    - name: Run data normalizer
      run: |
        python scripts/data_normalizer.py

    # Check for changes and create a new branch if changes exist
    - name: Commit changes
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git checkout -b data-normalization-${{ github.event.pull_request.number }}-${{ github.run_id }}
        git add -A
        if [[ `git status --porcelain` ]]; then
          git commit -m "Normalize data for PR #${{ github.event.pull_request.number }}"
        else
          echo "No changes to commit"
          exit 0
        fi

    # Push changes to the new branch
    - name: Push changes
      uses: ad-m/github-push-action@v0.6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: data-normalization-${{ github.event.pull_request.number }}-${{ github.run_id }}

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: data-normalization-${{ github.event.pull_request.number }}-${{ github.run_id }}
        base: ${{ github.event.pull_request.head.ref }}
        title: "Data Normalization for PR #${{ github.event.pull_request.number }}"
        body: |
          This pull request contains data normalization changes for PR #${{ github.event.pull_request.number }}.
          Please review and merge these changes to ensure data consistency.
        draft: false


    # Build the book
    - name: Generate link lists
      run: |
        python scripts/generate_link_lists.py
    - name: Export CSV
      run: |
        python scripts/export_csv.py
    - name: Top 3 downloads
      run: |
        python scripts/highlights-download-statistics.py
    - name: Build the book
      run: |
        jupyter-book build ./docs/
        

